#!/bin/bash

usage_short() {
	echo "USAGE: smbcrawl [ target ] -u [ username ] -p [ password ] -s [ share ]"
}

usage() {
	usage_short

	echo -e "\nExamples:"
	echo -e "\n# Use smbmap to print out the shares available on 10.10.10.100 with a specified user and password"
	echo "smbcrawl 10.10.10.100 -u someuser -p password123"

	echo -e "\n# Download all files under the Data share with specified credentials"
	echo "smbcrawl 10.10.10.100 -u someuser -p password123 -s Data"
}

if [[ -z $1 ]]; then
	usage_short
	exit 1
fi

if [[ $1 = "-h" ]]; then
	usage
	exit 1
fi

HOST=$1
shift 1

while getopts :u:p:hs: option
do
	case "${option}" in
		u) 
			USER=${OPTARG}
			;;
		p) 
			PASS=${OPTARG}
			;;
		s) 
			SHARE=${OPTARG}
			;;
		\?) 
			echo "ERROR: Invalid option -$OPTARG"
			usage 
			;;
		: ) 
			echo "ERROR: -$OPTARG requires an argument"
			usage
			exit 1
			;;
		h) 
			usage
			exit 1
			;;

	esac
done

if [[ $OPTINDS -eq 1 ]]; then
	usage
	exit
fi

if [[ -z $USER ]]; then
	USER='""'
fi

if [[ -z $PASS ]]; then
	PASS='""'
fi

if [[ -z $SHARE ]]; then
	echo "WARNING: Select a share to crawl with -s [ share ]"
	echo
	echo "Shares available with credentials $USER:$PASS"
	smbmap -H $HOST -u $USER -p $PASS
	exit 1
fi


echo "SEARCHING    \\\\$HOST\\$SHARE with $USER:$PASS"
echo
smbclient -U "$USER%$PASS" -c 'prompt OFF;recurse ON;mget *' \\\\$HOST\\$SHARE
if [ ! $? -eq 0 ]; then
	exit 1
fi

